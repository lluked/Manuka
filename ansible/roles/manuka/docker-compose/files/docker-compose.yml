version: "2.2"

services:

  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    user: "0"
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/setup:/usr/share/elasticsearch/config/setup
    networks:
      - elastic
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
      - LOGSTASH_SYSTEM_PASSWORD=${LOGSTASH_SYSTEM_PASSWORD}
      - LOGSTASH_INTERNAL_PASSWORD=${LOGSTASH_INTERNAL_PASSWORD}
    command: >
      bash -c '
        chmod +x "/usr/share/elasticsearch/config/setup/setup.sh";
        bash /usr/share/elasticsearch/config/setup/setup.sh
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es01/es01.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  es01:
    depends_on:
      setup:
        condition: service_healthy
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - certs:/usr/share/elasticsearch/config/certs:ro
      - esdata01:/usr/share/elasticsearch/data
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/elasticsearch/es01.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - elastic
    environment:
      - CLUSTER_NAME=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - LICENSE=${LICENSE}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash:
    image: "docker.elastic.co/logstash/logstash:${STACK_VERSION}"
    depends_on:
      es01:
        condition: service_healthy
    restart: always
    mem_limit: ${MEM_LIMIT}
    volumes:
      - certs:/usr/share/logstash/config/certs:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/logstash/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/logstash/db:/usr/share/logstash/db:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/log:/logs:ro
    networks:
      - elastic
    environment:
      - MONITORING_USERNAME=logstash_system
      - MONITORING_PASSWORD=${LOGSTASH_SYSTEM_PASSWORD}
      - ELASTICSEARCH_USERNAME=logstash_internal
      - ELASTICSEARCH_PASSWORD=${LOGSTASH_INTERNAL_PASSWORD}
    env_file:
      - "${PROJECT_INSTALL_DIRECTORY}/manuka/ip.env"

  cowrie:
    build:
      context: "./honeypot/cowrie/"
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/honeypot/cowrie/etc/cowrie.cfg:/home/cowrie/cowrie-git/etc/cowrie.cfg:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/honeypot/cowrie/etc/userdb.txt:/home/cowrie/cowrie-git/etc/userdb.txt:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/log/honeypot/cowrie/cowrie.json:/home/cowrie/cowrie-git/var/log/cowrie/cowrie.json
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/data/honeypot/cowrie/dl:/home/cowrie/cowrie-git/var/dl
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/data/honeypot/cowrie/tty:/home/cowrie/cowrie-git/var/tty
    networks:
      - cowrie
    ports:
      - ${COWRIE_SSH_PORT}:2222
      - ${COWRIE_TELNET_PORT}:2223

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    restart: always
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    mem_limit: ${MEM_LIMIT}
    volumes:
      - certs:/usr/share/kibana/config/certs:ro
      - kibanadata:/usr/share/kibana/data
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/elastic/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic
    environment:
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  traefik:
    image: "traefik:${TRAEFIK_VERSION}"
    depends_on:
      kibana:
        condition: service_healthy    
    restart: always
    volumes:
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/traefik/conf:/etc/traefik/conf:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/docker/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ${PROJECT_INSTALL_DIRECTORY}/manuka/log/traefik:/var/log
    networks:
      - elastic
    ports:
      - "80:80"
      - "443:443"

volumes:
  certs:
    driver: local
  esdata01:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PROJECT_INSTALL_DIRECTORY}/manuka/data/elasticsearch"
  kibanadata:
    driver: local

networks:
  elastic:
  cowrie:
